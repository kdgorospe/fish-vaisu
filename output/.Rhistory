#######################
tmp.lev<-levels(x$HABITAT_CODE); head(tmp.lev)
levels(x$HABITAT_CODE)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$SCIENTIFIC_NAME); head(tmp.lev)
levels(x$SCIENTIFIC_NAME)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$COMMONNAME); head(tmp.lev)
levels(x$COMMONNAME)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$GENUS); head(tmp.lev)
levels(x$GENUS)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$FAMILY); head(tmp.lev)
levels(x$FAMILY)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$COMMONFAMILYALL); head(tmp.lev)
levels(x$COMMONFAMILYALL)<-c(tmp.lev, "UNKNOWN")
tmp.lev<-levels(x$TROPHIC_MONREP); head(tmp.lev)
levels(x$TROPHIC_MONREP)<-c(tmp.lev, "UNKNOWN")
x[is.na(x$HABITAT_CODE),"HABITAT_CODE"]<-"UNKNOWN"
x[is.na(x$SCIENTIFIC_NAME),"SCIENTIFIC_NAME"]<-"UNKNOWN"
x[is.na(x$COMMONNAME),"COMMONNAME"]<-"UNKNOWN"
x[is.na(x$GENUS),"GENUS"]<-"UNKNOWN"
x[is.na(x$FAMILY),"FAMILY"]<-"UNKNOWN"
x[is.na(x$COMMONFAMILYALL),"COMMONFAMILYALL"]<-"UNKNOWN"
x[is.na(x$TROPHIC_MONREP),"TROPHIC_MONREP"]<-"UNKNOWN"
x[is.na(x$COUNT),]$COUNT<-0
x[is.na(x$SIZE_),]$SIZE_<-0
###x[is.na(x$LMAX),]$LMAX<-999
## separate out the north and south marianas
levels(x$REGION)<-c(levels(x$REGION), "S.MARIAN", "N.MARIAN")
x[x$ISLAND %in% c("Guam", "Rota", "Aguijan", "Tinian", "Saipan"),]$REGION<-"S.MARIAN"
x[x$ISLAND %in% c("Alamagan","Guguan","Sarigan","Pagan", "Agrihan", "Asuncion", "Maug", "Farallon de Pajaros"),]$REGION<-"N.MARIAN"
sectors[sectors$ISLAND %in% c("Guam", "Rota", "Aguijan", "Tinian", "Saipan"),]$REGION<-"S.MARIAN"
sectors[sectors$ISLAND %in% c("Alamagan","Guguan","Sarigan","Pagan", "Agrihan", "Asuncion", "Maug", "Farallon de Pajaros"),]$REGION<-"N.MARIAN"
sectors<-droplevels(sectors)
save(sectors, file="TMPsectors.Rdata")  # save cleaned up sectors file
###NEED TO SET VISIBILITY to -9999 when its NA
### NOTE THAT NWHI 2012 has VISIBLITY OF NA
unique(x[is.na(x$VISIBILITY),c("REGION", "OBS_YEAR")])
x[is.na(x$VISIBILITY),]$VISIBILITY<- -999
#x[x$VISIBILITY>30,]$VISIBILITY<- 30
#fixing unknown lat/long from a sites survyeted by Val Brown in Guam in 2015. These values are probably close
# .. putting this in here so that we do not have NAs in the LAT and LONG .. but we do nto want to save these to the actual master data file
x[x$SITE=="GUA-01310",]$LATITUDE<-13.24173
x[x$SITE=="GUA-01310",]$LONGITUDE<-144.70428
x<-droplevels(x)
#BENTHOS DOES NOT ALWAYS SUM TO 100% .. THIS IS A (LONG-LIVED!) TEMP FIX .. PROBABLY BETTER TO FIX THIS INSIDE ORACLE
BENTHIC_FIELDS<-c("HARD_CORAL", "SOFT_CORAL", "MA", "CCA", "TA", "SAND", "CYANO", "CLAM", "CORALLIMORPH", "ZOANTHID", "TUNICATE", "SPONGE", "OTHER")
UNIQUE_ROUND<-c("REGION", "OBS_YEAR", "METHOD")
round_table<-Aggregate_InputTable(x, UNIQUE_ROUND)
x$countBD<-apply(x[,BENTHIC_FIELDS], 1, function(xx) length(which(!is.na(xx))))  #IDW 10-22-2013 checking for situation where there is NO benthic data at all
for(i in 1:dim(round_table)[1])
{
if(round_table[i,"METHOD"] %in% c("nSPC", "nSPC-CCR"))
{
tmp_data<-x[x$OBS_YEAR==round_table[i,"OBS_YEAR"] & x$METHOD==round_table[i,"METHOD"] & x$REGION==round_table[i,"REGION"],]
#go through BENTHIC_FIELDS, checking whether there are some NAs and some data values
for(j in 1:length(BENTHIC_FIELDS))
{
## IF there are both non NAs and NAs
if(length(tmp_data[!is.na(tmp_data[,BENTHIC_FIELDS[j]]),BENTHIC_FIELDS[j]]) > 0
& length(tmp_data[is.na(tmp_data[,BENTHIC_FIELDS[j]]),BENTHIC_FIELDS[j]]) > 0)
{
#set all NAs of that field to 0
tmp_data[is.na(tmp_data[,BENTHIC_FIELDS[j]]),BENTHIC_FIELDS[j]]<-0
#now rewrite the benthic fields with NAs converted to zeros
x[x$OBS_YEAR==round_table[i,"OBS_YEAR"] & x$METHOD==round_table[i,"METHOD"] & x$REGION==round_table[i,"REGION"],BENTHIC_FIELDS[j]]<-tmp_data[,BENTHIC_FIELDS[j]]
}
}
}
}
# now reset zeros to NAs for all records where there was NO benthic data at all
x[x$countBD==0,BENTHIC_FIELDS]<-NA
wd<-droplevels(x)
save(wd, file="TMPwd-ForIslandLevelEstimates.Rdata")  #Save clean working data
rm(list=ls())
library(gdata)             # needed for drop_levels()
library(reshape)           # reshape library inclues the cast() function used below
setwd("~/Analyses_notGit/fish-vaisu/input") # modify to your folder structure
#LOAD LIBRARY FUNCTIONS ...
source("lib/core_functions.R")
source("lib/fish_team_functions.R")
#source("lib/Islandwide Mean&Variance Functions.R")
#LOAD THE CLEAN wd
load("TMPwd-ForIslandLevelEstimates.Rdata")
## FILTER BY LOCATION, YEARS, METHOD, AND OBS_TYPE HERE!
wd[!wd$OBS_TYPE %in% c("U", "I", "N"), ]$COUNT<-0
wd<-subset(wd, wd$METHOD %in% c("nSPC"))
wd<-subset(wd, wd$ISLAND %in% c("Tutuila", "Ofu & Olosega", "Tau"))
wd<-droplevels(wd)
#base information about the survey - field names should match those in input file (obviously!)
UNIQUE_SURVEY<-c("SITEVISITID","METHOD")
UNIQUE_REP<-c(UNIQUE_SURVEY, "REP")
UNIQUE_COUNT<-c(UNIQUE_REP, "REPLICATEID")
#get base survey info, calculate average depth+complexity+so on
SURVEY_INFO<-c("OBS_YEAR", "REGION", "REGION_NAME", "ISLAND", "ANALYSIS_SCHEME", "ANALYSIS_YEAR", "SEC_NAME", "SITE", "DATE_", "REEF_ZONE", "DEPTH_BIN", "LATITUDE", "LONGITUDE", "SITEVISITID", "METHOD")
survey_table<-Aggregate_InputTable(wd, SURVEY_INFO)
OTHER_BENTHIC<-c("CLAM", "CORALLIMORPH", "ZOANTHID", "TUNICATE", "SPONGE", "TA", "CYANO", "OTHER", "SOFT_CORAL")
wd$OTHER_BENTHIC<-rowSums(wd[,OTHER_BENTHIC],na.rm=T)
SURVEY_SITE_DATA<-c("DEPTH", "HARD_CORAL", "MA", "CCA", "SAND", "OTHER_BENTHIC", "ComplexityValue", "MEAN_SH", "SD_SH_DIFF", "MAX_HEIGHT")
# Generate a data frame with all benthic and site level information for each survey
survey_est_benthos<-Calc_Site_nSurveysArea(wd, UNIQUE_SURVEY, UNIQUE_REP, UNIQUE_COUNT, SURVEY_SITE_DATA)   #Calc_Site_nSurveysArea deals better with situations where one REP has benthic data and other doesnt.
surveys<-merge(survey_table, survey_est_benthos, by=UNIQUE_SURVEY)
save(surveys, file="TMPsurveys.Rdata")
#Pull all species information into a separate df, for possible later use ..
FISH_SPECIES_FIELDS<-c("SPECIES","TAXONNAME", "FAMILY", "COMMONFAMILYALL", "TROPHIC_MONREP", "LW_A", "LW_B", "LENGTH_CONVERSION_FACTOR")
species_table<-Aggregate_InputTable(wd, FISH_SPECIES_FIELDS)
save(species_table, file="TMPspecies.Rdata")
################################################################
################################################################
################################################################
#### CHOOSE BETWEEN FAMILY or SPECIES-level BIOMASS or ABUNDANCE
# GENERATE SUMMARY METRICS --------------------------------------------------
#r1<-Calc_Site_Bio(wd, "FAMILY"); family.cols<-names(r1[3:dim(r1)[2]])
#r1<-Calc_Site_Abund(wd, "FAMILY"); family.cols<-names(r1[3:dim(r1)[2]])
#r1<-Calc_Site_Bio(wd, "SPECIES"); species.cols<-names(r1[3:dim(r1)[2]])
r1<-Calc_Site_Abund(wd, "SPECIES"); species.cols<-names(r1[3:dim(r1)[2]])
#r2a<-Calc_Site_Abund(wd, "SPECIES"); species.cols<-levels(species_table$SPECIES)
#r2b<-Calc_Site_Bio(wd, "SPECIES"); species.cols<-levels(species_table$SPECIES)
#r3<-Calc_Site_Bio_By_SizeClass(wd, c(0,20,50,Inf)); size.cols<-names(r4b)[3:dim(r4b)[2]]
#r4<-Modified_Site_Species_Richness(wd)
# to calculate mean fish length per site
#r5<-Calc_Site_MeanLength(wd,min_size=0.4)
#Merge Site Data and Count Data Per Site Per Grouping Variable (e.g. Species, Tropic_MonRep, Family)
wsd<-merge(surveys,r1,by=UNIQUE_SURVEY)
wsd$TotFish<-rowSums(wsd[,species.cols])
data.cols<-c(species.cols, "TotFish", SURVEY_SITE_DATA)
#wsd<-merge(wsd, r4b, by=UNIQUE_SURVEY)
#data.cols<-c(data.cols, "0_20", "20_50", "50_plus")
#names(wsd)[match(c("(0,20]", "(20,50]","(50,Inf]" ),names(wsd))] <- c("0_20", "20_50", "50_plus")
#wsd$BSR<-(wsd$HARD_CORAL+wsd$CCA)/(100-wsd$HARD_CORAL+wsd$CCA)  #we dont have TA anymore!
#data.cols<-c(data.cols, "BSR")
# OUTPUT working_site_data  -----------------------------------
save(wsd, file="TMPwsd-ForIslandLevelEstimates.Rdata")
save(data.cols, file="TMPdata.cols.Rdata")
rm(list=ls())
library(gdata)             # needed for drop_levels()
library(reshape)           # reshape library inclues the cast() function used below
setwd("~/Analyses_notGit/fish-vaisu/input") # modify to your folder structure
#LOAD LIBRARY FUNCTIONS ...
source("lib/core_functions.R")
source("lib/fish_team_functions.R")
source("lib/Islandwide Mean&Variance Functions.R")
#LOAD THE CLEAN wsd and sectors data
load("TMPsectors.Rdata")
load("TMPwsd-ForIslandLevelEstimates.Rdata")
load("TMPdata.cols.Rdata")
#Potentially cap the data here!
####################################################################################################################################################################
#
#     CHECK THAT DATA IS READY FOR POOLING AND DO SOME FINAL CLEAN UPS, EG SET BACKREEF DEPTH_ZONE TO ALL, CREATE THE "SGA" LOCATION
#
####################################################################################################################################################################
## check wwhether we have ISLANDS that arent in the sectors file
setdiff(unique(wsd$ISLAND),unique(sectors$ISLAND))
#set all Backreef to a single DEPTH_ZONE ("All")
levels(wsd$DEPTH_BIN)<-c(levels(wsd$DEPTH_BIN), "All")
wsd[wsd$REEF_ZONE=="Backreef",]$DEPTH_BIN<-"All"
sectors[sectors$REEF_ZONE=="Backreef",]$DEPTH_BIN<-"All"
wsd$DEPTH_BIN<-as.character(wsd$DEPTH_BIN)# won't change value to "All" if it is a factor
wsd[wsd$ISLAND=="Rose" & wsd$REEF_ZONE=="Lagoon",]$DEPTH_BIN<-"All"
sectors[sectors$ISLAND=="Rose" & sectors$REEF_ZONE=="Lagoon",]$DEPTH_BIN<-"All"
wsd$DEPTH_BIN<-as.factor(wsd$DEPTH_BIN)# change back to factor
wsd$STRATA<-paste(substring(wsd$REEF_ZONE,1,1), substring(wsd$DEPTH_BIN,1,1), sep="")
sectors$STRATA<-paste(substring(sectors$REEF_ZONE,1,1), substring(sectors$DEPTH_BIN,1,1), sep="")
## COMMENT OUT creation of AGS "island" - just adds AGS as a level, and doesn't apply to our dataset anyway
## TREAT GUGUAN, ALAMAGAN, SARIGAN AS ONE ISLAND  (REALLY ONE BASE REPORTING UNIT .. BUT SIMPLER TO STICK TO 'ISLAND')
#SGA<-c("Guguan", "Alamagan", "Sarigan")
#levels(wsd$ISLAND)<-c(levels(wsd$ISLAND), "AGS")
#wsd[wsd$ISLAND %in% SGA,]$ISLAND<-"AGS"
#sectors[sectors$ISLAND %in% SGA,]$ISLAND<-"AGS"
## COMMENT out creation of different "ANALYSIS_YEAR" levels - doesn't apply to our dataset
#levels(wsd$ANALYSIS_YEAR)<-c(levels(wsd$ANALYSIS_YEAR), "2016on")
#wsd[wsd$REGION %in% c("MHI", "NWHI") & wsd$OBS_YEAR==2016,]$ANALYSIS_YEAR<-"2016on"
#wsd[wsd$REGION %in% c("MHI", "NWHI") & wsd$OBS_YEAR %in% seq(2010,2012),]$ANALYSIS_YEAR<-"2010-12"
#wsd[wsd$REGION %in% c("MHI", "NWHI") & wsd$OBS_YEAR %in% seq(2013,2015),]$ANALYSIS_YEAR<-"2013-15"
## generate a complete list of all ANALYSIS STRATA and their size
SCHEMES<-c("RAMP_BASIC", "MARI2011", "MARI2014", "TUT10_12", "AS_SANCTUARY")
for(i in 1:length(SCHEMES)){
tmp2<-sectors[,c("SEC_NAME", SCHEMES[i])]
tmp2$SCHEME<-SCHEMES[i]
names(tmp2)<- c("SEC_NAME", "ANALYSIS_SEC", "ANALYSIS_SCHEME")
tmp<-aggregate(sectors$AREA_HA, sectors[,c(SCHEMES[i], "STRATA")], sum)
tmp$SCHEME<-SCHEMES[i]
names(tmp)<-c("ANALYSIS_SEC", "STRATA", "AREA_HA", "ANALYSIS_SCHEME")
if(i==1){
st<-tmp
as<-tmp2
} else {
st<-rbind(st, tmp)
as<-rbind(as, tmp2)
}
}
as$TMP<-1
as<-aggregate(as$TMP, by=as[,c("SEC_NAME", "ANALYSIS_SCHEME", "ANALYSIS_SEC")], length)
as$x<-NULL
wsd<-merge(wsd, as, by=c("SEC_NAME", "ANALYSIS_SCHEME"), all.x=T)  # add ANALYSISS_SCHEME for tthis sector and sceheme combination
unique(wsd[is.na(wsd$ANALYSIS_SCHEME), c("ISLAND", "ANALYSIS_SEC", "SEC_NAME", "OBS_YEAR", "ANALYSIS_YEAR", "ANALYSIS_SCHEME", "STRATA")])
cast(st, ANALYSIS_SEC ~ ANALYSIS_SCHEME, value="AREA_HA", sum)
wsd<-merge(wsd, st, by=c("ANALYSIS_SCHEME", "ANALYSIS_SEC", "STRATA"), all.x=T)
#check if some are missing an AREA_HA .. which means that they didnt get into the stratification scheme properly
unique(wsd[is.na(wsd$AREA_HA), c("ISLAND", "ANALYSIS_SEC", "SEC_NAME", "OBS_YEAR", "ANALYSIS_YEAR", "ANALYSIS_SCHEME", "STRATA")])
#NOW CHECK HOW MANY REPS WE HAVE PER STRATA
a<-cast(wsd, REGION + ANALYSIS_SCHEME + ISLAND + ANALYSIS_SEC + ANALYSIS_YEAR ~ STRATA, value="AREA_HA", length); a
# OUTPUT sites per years (appendix 3) -------------------------------------
save(a, file="sites_year_reef_zone_depth_bin.rdata") ## use this for table in appendix 3 - see appendices R file
####################################################################################################################################################################
#
#     POOL WSD (WORKING SITE DATA TO STRATA THEN TO HIGHER LEVELS
##
###################################################################################################################################################################
### CALCULATE MEAN AND VARIANCE WITHIN STRATA ###
SPATIAL_POOLING_BASE<-c("REGION", "ISLAND", "ANALYSIS_SEC", "REEF_ZONE", "STRATA")
ADDITIONAL_POOLING_BY<-c("METHOD", "ANALYSIS_YEAR")                                    # additional fields that we want to break data at, but which do not relate to physical areas (eg survey year or method)
#generate within strata means and vars
POOLING_LEVEL<-c(SPATIAL_POOLING_BASE, ADDITIONAL_POOLING_BY)
dps<-Calc_PerStrata(wsd, data.cols, c(POOLING_LEVEL, "AREA_HA"))
#save(dps,file="tmp REA per strata.RData")
head(dps$Mean)
###### REMOVE STRATA with N=1 (cannot pool those up)
dps$Mean<-dps$Mean[dps$Mean$N>1,]
dps$SampleVar<-dps$SampleVar[dps$SampleVar$N>1,]
dps$SampleSE<-dps$SampleSE[dps$SampleSE$N>1,]
#SOME EXAMPLES OF POOLING
# e.g. SAVE BY ISLAND AND REEF_ZONE PER YEAR
#OUTPUT_LEVEL<-c("REGION", "ISLAND", "REEF_ZONE", "ANALYSIS_YEAR")
#dp<-Calc_Pooled_Simple(dps$Mean, dps$SampleVar, data.cols, OUTPUT_LEVEL, "AREA_HA")
#save(dp, file="data_pooled_is_yr_RZ.Rdata")
# e.g. SAVE BY ISLAND PER YEAR
#OUTPUT_LEVEL<-c("REGION","ISLAND", "ANALYSIS_YEAR", "METHOD")
#dp<-Calc_Pooled_Simple(dps$Mean, dps$SampleVar, data.cols, OUTPUT_LEVEL, "AREA_HA")
#save(dp, file="data_pooled_is_yr.Rdata")
# e.g. SAVE BY ISLAND POOLING ALL YEARS' DATA
OUTPUT_LEVEL<-c("REGION","ISLAND", "METHOD")
dp<-Calc_Pooled_Simple(dps$Mean, dps$SampleVar, data.cols, OUTPUT_LEVEL, "AREA_HA")
################################################################################
###### SPECIFY NAME OF saved dp file as FAMILY or SPECIES LEVEL and BIOMASS vs ABUND
save(dp, file="data_pooled_island.Rdata")
rm(list=ls())
library(ggplot2)
setwd("~/Analyses_notGit/fish-vaisu/input") # modify to your folder structure
#load("data_pooled_island-FamilyBiomass.Rdata")
#load("data_pooled_shed-FamilyBiomass.Rdata")
#load("data_pooled_island-FamilyAbund.Rdata")
#load("data_pooled_shed-FamilyAbund.Rdata")
load("data_pooled_island-SpeciesAbund.Rdata")
load("data_pooled_shed-SpeciesAbund.Rdata")
names(dp$Mean)
load("TMPspecies.RData")
species_table
names(species_table)
levels(species_table$FAMILY)
species_table[species_table$FAMILY=="Acanthuridae",]
dim(species_table[species_table$FAMILY=="Acanthuridae",])
acanths<-species_table[species_table$FAMILY=="Acanthuridae",]
acanths$SPECIES
names(dp.Shed)
names(dp.Shed$Mean)
acanth.list
acanth.list<-acanths$SPECIES
acanth.list
class(acanth.list[1])
as.character(acanth.list)
acanth.list<-as.character(acanth.list)
# GRAPH SETTINGS:::
fishgroups<-acanth.list
i=1
mean.is<-subset(dp$Mean, select=c(ISLAND,get(fishgroups[i])))
mean.sh<-subset(dp.Shed$Mean, select=c(Group.1,get(fishgroups[i])))
colnames(mean.is)[1]<-"Scale"
colnames(mean.sh)[1]<-"Scale"
mean.all<-rbind(mean.is, mean.sh)
mean.graph<-mean.all[(mean.all$Scale %in% places),]
se.is<-subset(dp$PooledSE, select=c(ISLAND,get(fishgroups[i])))
se.sh<-subset(dp.Shed$PooledSE, select=c(Group.1,get(fishgroups[i])))
colnames(se.is)[1]<-"Scale"
colnames(se.sh)[1]<-"Scale"
se.all<-rbind(se.is, se.sh)
se.graph<-se.all[(se.all$Scale %in% places),]
dat.graph<-merge(mean.graph, se.graph, by="Scale")
names(dat.graph)[2:3]<-c("mean", "se")
p<-ggplot(dat.graph, aes(x=Scale, y=mean))+
geom_bar(stat="identity", color="black", fill="orange")+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.2)+
labs(y=yname, x="", title=fishgroups[i])+
theme_light()+
theme(text = element_text(size=18),
axis.text.x=element_text(size=16, colour="black"))
filename=paste(yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
i=1
mean.is<-subset(dp$Mean, select=c(ISLAND,get(fishgroups[i])))
mean.sh<-subset(dp.Shed$Mean, select=c(Group.1,get(fishgroups[i])))
colnames(mean.is)[1]<-"Scale"
colnames(mean.sh)[1]<-"Scale"
head(mean.is)
head(mean.sh)
mean.all<-rbind(mean.is, mean.sh)
mean.graph<-mean.all[(mean.all$Scale %in% places),]
places<-c("Tutuila", "Ofu & Olosega", "Tau", "Faga'alu", "Vatia")
yname="Abundance"
mean.graph<-mean.all[(mean.all$Scale %in% places),]
se.is<-subset(dp$PooledSE, select=c(ISLAND,get(fishgroups[i])))
se.sh<-subset(dp.Shed$PooledSE, select=c(Group.1,get(fishgroups[i])))
colnames(se.is)[1]<-"Scale"
colnames(se.sh)[1]<-"Scale"
se.all<-rbind(se.is, se.sh)
se.graph<-se.all[(se.all$Scale %in% places),]
dat.graph<-merge(mean.graph, se.graph, by="Scale")
names(dat.graph)[2:3]<-c("mean", "se")
p<-ggplot(dat.graph, aes(x=Scale, y=mean))+
geom_bar(stat="identity", color="black", fill="orange")+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.2)+
labs(y=yname, x="", title=fishgroups[i])+
theme_light()+
theme(text = element_text(size=18),
axis.text.x=element_text(size=16, colour="black"))
filename=paste(yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
filename=paste(means_yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
filename=paste("means_", yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
for (i in 1:length(fishgroups))
{
mean.is<-subset(dp$Mean, select=c(ISLAND,get(fishgroups[i])))
mean.sh<-subset(dp.Shed$Mean, select=c(Group.1,get(fishgroups[i])))
colnames(mean.is)[1]<-"Scale"
colnames(mean.sh)[1]<-"Scale"
mean.all<-rbind(mean.is, mean.sh)
mean.graph<-mean.all[(mean.all$Scale %in% places),]
se.is<-subset(dp$PooledSE, select=c(ISLAND,get(fishgroups[i])))
se.sh<-subset(dp.Shed$PooledSE, select=c(Group.1,get(fishgroups[i])))
colnames(se.is)[1]<-"Scale"
colnames(se.sh)[1]<-"Scale"
se.all<-rbind(se.is, se.sh)
se.graph<-se.all[(se.all$Scale %in% places),]
dat.graph<-merge(mean.graph, se.graph, by="Scale")
names(dat.graph)[2:3]<-c("mean", "se")
p<-ggplot(dat.graph, aes(x=Scale, y=mean))+
geom_bar(stat="identity", color="black", fill="orange")+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.2)+
labs(y=yname, x="", title=fishgroups[i])+
theme_light()+
theme(text = element_text(size=18),
axis.text.x=element_text(size=16, colour="black"))
filename=paste("means_", yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
}
rm(list=ls())
library(ggplot2)
setwd("~/Analyses_notGit/fish-vaisu/input") # modify to your folder structure
#load("data_pooled_island-FamilyBiomass.Rdata")
#load("data_pooled_shed-FamilyBiomass.Rdata")
#load("data_pooled_island-FamilyAbund.Rdata")
#load("data_pooled_shed-FamilyAbund.Rdata")
#load("data_pooled_island-SpeciesAbund.Rdata")
#load("data_pooled_shed-SpeciesAbund.Rdata")
load("data_pooled_island-SpeciesBiomass.Rdata")
load("data_pooled_shed-SpeciesBiomass.Rdata")
# For deciding which species to graph:
load("TMPspecies.RData")
acanths<-species_table[species_table$FAMILY=="Acanthuridae",]
acanth.list<-acanths$SPECIES
acanth.list<-as.character(acanth.list)
# ROWBIND the means and standard errors
# Need a dataframe for each family with columns for groupname (Shed or Island), Mean, and SE
# GRAPH SETTINGS:::
fishgroups<-acanth.list
#fishgroups<-c("Acanthuridae", "Carangidae", "Scombridae", "Scaridae", "Serranidae", "Lutjanidae", "Mullidae", "Lethrinidae", "TotFish")
places<-c("Tutuila", "Ofu & Olosega", "Tau", "Faga'alu", "Vatia")
yname="Biomass"
for (i in 1:length(fishgroups))
{
mean.is<-subset(dp$Mean, select=c(ISLAND,get(fishgroups[i])))
mean.sh<-subset(dp.Shed$Mean, select=c(Group.1,get(fishgroups[i])))
colnames(mean.is)[1]<-"Scale"
colnames(mean.sh)[1]<-"Scale"
mean.all<-rbind(mean.is, mean.sh)
mean.graph<-mean.all[(mean.all$Scale %in% places),]
se.is<-subset(dp$PooledSE, select=c(ISLAND,get(fishgroups[i])))
se.sh<-subset(dp.Shed$PooledSE, select=c(Group.1,get(fishgroups[i])))
colnames(se.is)[1]<-"Scale"
colnames(se.sh)[1]<-"Scale"
se.all<-rbind(se.is, se.sh)
se.graph<-se.all[(se.all$Scale %in% places),]
dat.graph<-merge(mean.graph, se.graph, by="Scale")
names(dat.graph)[2:3]<-c("mean", "se")
p<-ggplot(dat.graph, aes(x=Scale, y=mean))+
geom_bar(stat="identity", color="black", fill="orange")+
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=0.2)+
labs(y=yname, x="", title=fishgroups[i])+
theme_light()+
theme(text = element_text(size=18),
axis.text.x=element_text(size=16, colour="black"))
filename=paste("means_", yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
}
rm(list=ls())
library(gdata)             # needed for drop_levels()
library(reshape)           # reshape library inclues the cast() function used below
library(ggplot2)
setwd("~/Analyses_notGit/fish-vaisu/input") # modify to your folder structure
#LOAD LIBRARY FUNCTIONS ...
#load("TMPwsd-withVatiaFagaalu-FamilyAbund.Rdata")
#load("TMPwsd-withVatiaFagaalu-FamilyBiomass.Rdata")
load("TMPwsd-withVatiaFagaalu-SpeciesAbund.Rdata")
shed.info<-read.csv("SITE_MASTER_2016_TUT_Watershed_Sector.csv")
# MERGE fish data with site info (i.e., watershed assignment) data
#common.info<-names(wsd)[names(wsd) %in% names(shed.info)]
#Remove DATE, LAT, LONG
common.info<-c("SITEVISITID", "OBS_YEAR", "REGION", "ANALYSIS_SCHEME", "SEC_NAME", "ISLAND", "SITE", "REEF_ZONE", "DEPTH_BIN")
shed.temp<-subset(shed.info, select=-c(DATE_, LATITUDE, LONGITUDE))
wsd.village<-merge(x=wsd, y=shed.temp, by=common.info, all.x=TRUE)
table(wsd.village$Watershed)
table(wsd.village$ISLAND)
# For deciding which species to graph:
load("TMPspecies.RData")
acanths<-species_table[species_table$FAMILY=="Acanthuridae",]
acanth.list<-acanths$SPECIES
acanth.list<-as.character(acanth.list)
# GRAPH SETTINGS:::
fishgroups<-acanth.list
#fishgroups<-c("Acanthuridae", "Carangidae", "Scombridae", "Scaridae", "Serranidae", "Lutjanidae", "Mullidae", "Lethrinidae", "TotFish")
places<-c("Tutuila", "Ofu & Olosega", "Tau", "Faga'alu", "Vatia")
yname="Abundance"
for (i in 1:length(fishgroups))
{
oo.dat<-data.frame(group="Ofu & Olosega", value=subset(wsd.village, ISLAND=="Ofu & Olosega", select=fishgroups[i]))
tau.dat<-data.frame(group="Tau", value=subset(wsd.village, ISLAND=="Tau", select=fishgroups[i]))
tut.dat<-data.frame(group="Tutuila", value=subset(wsd.village, ISLAND=="Tutuila", select=fishgroups[i]))
faga.dat<-data.frame(group="Faga'alu", value=subset(wsd.village, Watershed=="Faga'alu", select=fishgroups[i]))
vat.dat<-data.frame(group="Vatia", value=subset(wsd.village, Watershed=="Vatia", select=fishgroups[i]))
graph.dat<-rbind(tut.dat, oo.dat, tau.dat, faga.dat, vat.dat)
p<-ggplot(graph.dat, aes(x=group, y=get(fishgroups[i])))+
geom_boxplot(outlier.alpha=0, lwd=1.3)+
geom_jitter(colour="blue", alpha=0.3)+
labs(y=yname, x="", title=fishgroups[i])+
theme_light()+
theme(text = element_text(size=18),
axis.text.x=element_text(size=16, colour="black"))
filename=paste("boxplot_", yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
}
rm(list=ls())
library(gdata)             # needed for drop_levels()
library(reshape)           # reshape library inclues the cast() function used below
library(ggplot2)
setwd("~/Analyses_notGit/fish-vaisu/input") # modify to your folder structure
#LOAD LIBRARY FUNCTIONS ...
#load("TMPwsd-withVatiaFagaalu-FamilyAbund.Rdata")
#load("TMPwsd-withVatiaFagaalu-FamilyBiomass.Rdata")
#load("TMPwsd-withVatiaFagaalu-SpeciesAbund.Rdata")
load("TMPwsd-withVatiaFagaalu-SpeciesBiomass.Rdata")
shed.info<-read.csv("SITE_MASTER_2016_TUT_Watershed_Sector.csv")
# MERGE fish data with site info (i.e., watershed assignment) data
#common.info<-names(wsd)[names(wsd) %in% names(shed.info)]
#Remove DATE, LAT, LONG
common.info<-c("SITEVISITID", "OBS_YEAR", "REGION", "ANALYSIS_SCHEME", "SEC_NAME", "ISLAND", "SITE", "REEF_ZONE", "DEPTH_BIN")
shed.temp<-subset(shed.info, select=-c(DATE_, LATITUDE, LONGITUDE))
wsd.village<-merge(x=wsd, y=shed.temp, by=common.info, all.x=TRUE)
table(wsd.village$Watershed)
table(wsd.village$ISLAND)
# For deciding which species to graph:
load("TMPspecies.RData")
acanths<-species_table[species_table$FAMILY=="Acanthuridae",]
acanth.list<-acanths$SPECIES
acanth.list<-as.character(acanth.list)
# GRAPH SETTINGS:::
fishgroups<-acanth.list
#fishgroups<-c("Acanthuridae", "Carangidae", "Scombridae", "Scaridae", "Serranidae", "Lutjanidae", "Mullidae", "Lethrinidae", "TotFish")
places<-c("Tutuila", "Ofu & Olosega", "Tau", "Faga'alu", "Vatia")
yname="Biomass"
for (i in 1:length(fishgroups))
{
oo.dat<-data.frame(group="Ofu & Olosega", value=subset(wsd.village, ISLAND=="Ofu & Olosega", select=fishgroups[i]))
tau.dat<-data.frame(group="Tau", value=subset(wsd.village, ISLAND=="Tau", select=fishgroups[i]))
tut.dat<-data.frame(group="Tutuila", value=subset(wsd.village, ISLAND=="Tutuila", select=fishgroups[i]))
faga.dat<-data.frame(group="Faga'alu", value=subset(wsd.village, Watershed=="Faga'alu", select=fishgroups[i]))
vat.dat<-data.frame(group="Vatia", value=subset(wsd.village, Watershed=="Vatia", select=fishgroups[i]))
graph.dat<-rbind(tut.dat, oo.dat, tau.dat, faga.dat, vat.dat)
p<-ggplot(graph.dat, aes(x=group, y=get(fishgroups[i])))+
geom_boxplot(outlier.alpha=0, lwd=1.3)+
geom_jitter(colour="blue", alpha=0.3)+
labs(y=yname, x="", title=fishgroups[i])+
theme_light()+
theme(text = element_text(size=18),
axis.text.x=element_text(size=16, colour="black"))
filename=paste("boxplot_", yname, "_", fishgroups[i], ".pdf", sep="")
setwd("~/Analyses_notGit/fish-vaisu/output")
pdf(file=filename)
print(p)
dev.off()
}
